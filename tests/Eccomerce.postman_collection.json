{
	"info": {
		"_postman_id": "51ce0065-52fe-4690-bb02-8c19acbefef6",
		"name": "Eccomerce",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Post Product Category Rejectod No SID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "category",
									"value": "Computacion",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{HOST}}:{{PORT}}/categories",
							"protocol": "http",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Login Accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Session Id Cookie is present\", function () {\r",
									"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
									"    pm.globals.set(\"session_id\", pm.cookies.get('sid'));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{HOST}}:{{PORT}}/login",
							"protocol": "http",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Product Category Accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "category",
									"value": "Computacion",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{HOST}}:{{PORT}}/categories",
							"protocol": "http",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Product Category Duplicated Rejected",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "category",
									"value": "Computacion",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{HOST}}:{{PORT}}/categories",
							"protocol": "http",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Logout Accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{HOST}}:{{PORT}}/logout",
							"protocol": "http",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Logout Rejected No Cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{HOST}}:{{PORT}}/logout",
							"protocol": "http",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Index",
					"item": [
						{
							"name": "Index",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/hmtl\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contain('text/html')\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.cookies.clear();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Register",
					"item": [
						{
							"name": "Post Register Rejected Invalid Character Username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "Hola$%&",
											"type": "text"
										},
										{
											"key": "secret",
											"value": "Mundo",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Register Rejected Invalid Character Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "Hola",
											"type": "text"
										},
										{
											"key": "secret",
											"value": "Mundo",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Register Not Authenticated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/html\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contain('text/html')\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Register Accepted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "Hola",
											"type": "text"
										},
										{
											"key": "secret",
											"value": "Mundo678",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Register Rejected Duplicated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "Hola",
											"type": "text"
										},
										{
											"key": "secret",
											"value": "Mundo678",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Register Rejected Empty Username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "secret",
											"value": "Mundo",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Register Rejected Empty Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "Hola",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Get Login Not Authenticated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/hmtl\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contain('text/html')\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/login",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Login Rejected",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "test",
											"type": "string"
										},
										{
											"key": "username",
											"value": "test",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/login",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Login Rejected No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/login",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Login Accepted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Session Id Cookie is present\", function () {\r",
											"    pm.expect(pm.cookies.has('sid')).to.be.true;\r",
											"    pm.globals.set(\"session_id\", pm.cookies.get('sid'));\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "Mundo678",
											"type": "string"
										},
										{
											"key": "username",
											"value": "Hola",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/login",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Login Authenticated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 302\", function () {\r",
											"    pm.response.to.have.status(302);\r",
											"});\r",
											"pm.test(\"Location is present\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": false
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/login",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Register Authenticated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 302\", function () {\r",
											"    pm.response.to.have.status(302);\r",
											"});\r",
											"pm.test(\"Location is present\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"followRedirects": false
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/register",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Product",
					"item": [
						{
							"name": "Post Product Accepted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product",
											"value": "R9 270x",
											"type": "text"
										},
										{
											"key": "price",
											"value": "20000",
											"type": "text"
										},
										{
											"key": "category",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Product 2 Accepted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product",
											"value": "R9 280x",
											"type": "text"
										},
										{
											"key": "price",
											"value": "30000",
											"type": "text"
										},
										{
											"key": "category",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Product Rejected Category Not Existent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product",
											"value": "R9 270x",
											"type": "text"
										},
										{
											"key": "price",
											"value": "20000",
											"type": "text"
										},
										{
											"key": "category",
											"value": "2",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Product Rejected Invalid Price",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product",
											"value": "R9 270x",
											"type": "text"
										},
										{
											"key": "price",
											"value": "Hola Mundo",
											"type": "text"
										},
										{
											"key": "category",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Product Rejected Invalid User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const jar = pm.cookies.jar();\r",
											"jar.unset(pm.environment.get('HOST'), \"sid\", (err) => console.error(err));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product",
											"value": "Hola Mundo",
											"type": "text"
										},
										{
											"key": "price",
											"value": "20000",
											"type": "text"
										},
										{
											"key": "category",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product With Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/json\", function () {\r",
											"    pm.response.to.have.jsonBody();\r",
											"});\r",
											"\r",
											"var schema = \r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"0\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"price\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"seller\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"category\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"name\",\r",
											"        \"price\",\r",
											"        \"seller\",\r",
											"        \"category\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"0\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products/1",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product With Query Product Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/json\", function () {\r",
											"    pm.response.to.have.jsonBody();\r",
											"});\r",
											"\r",
											"var schema = \r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"0\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"price\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"seller\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"category\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"name\",\r",
											"        \"price\",\r",
											"        \"seller\",\r",
											"        \"category\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"0\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products/?query=R9+270x",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products",
										""
									],
									"query": [
										{
											"key": "query",
											"value": "R9+270x"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product With Query Category Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/json\", function () {\r",
											"    pm.response.to.have.jsonBody();\r",
											"});\r",
											"\r",
											"var schema = \r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"0\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"price\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"seller\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"category\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"name\",\r",
											"        \"price\",\r",
											"        \"seller\",\r",
											"        \"category\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"0\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products/?query=Computacion",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products",
										""
									],
									"query": [
										{
											"key": "query",
											"value": "Computacion"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product Without Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response is text/json\", function () {\r",
											"    pm.response.to.have.jsonBody();\r",
											"});\r",
											"\r",
											"var schema = \r",
											"{\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"0\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"price\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"seller\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"category\": {\r",
											"          \"type\": \"integer\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"name\",\r",
											"        \"price\",\r",
											"        \"seller\",\r",
											"        \"category\"\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"0\"\r",
											"  ]\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/products/",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"products",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cart",
					"item": [
						{
							"name": "Get Cart Accepted",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Cart Accepted",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const jar = pm.cookies.jar();\r",
											"jar.set(pm.environment.get('HOST'), \"sid\", pm.globals.get(\"session_id\"), err => console.error(err));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "quantity",
											"value": "10",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Cart 2 Accepted",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "2",
											"type": "text"
										},
										{
											"key": "quantity",
											"value": "5",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Cart Rejected Invalid Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "Hola",
											"type": "text"
										},
										{
											"key": "quantity",
											"value": "10",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Cart Rejected Invalid Quantity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "quantity",
											"value": "Hola Mundo",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Cart Rejected Duplicated",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "1",
											"type": "text"
										},
										{
											"key": "quantity",
											"value": "10",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Cart Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delet Cart Rejected Not Found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "product_id",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/cart",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"cart"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}
